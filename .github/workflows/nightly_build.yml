name: "GLPI nightly build"

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  build:
    name: "Build ${{ matrix.branch }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        include:
          # build on lower supported version to ensure building tools are compatible with this version
          - {branch: "9.4/bugfixes", php-version: "5.6"}
          - {branch: "9.5/bugfixes", php-version: "7.2"}
    services:
      app:
        image: "glpi/githubactions-php:${{ matrix.php-version }}"
        options: >-
          --volume /glpi:/var/glpi
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          ref: ${{ matrix.branch }}
      - name: "Deploy source into app container"
        run: |
          sudo cp --no-target-directory --preserve --recursive `pwd` /glpi
          sudo chown -R 1000:1000 /glpi
      - name: "Install dependencies"
        run: |
          docker exec ${{ job.services.app.id }} composer install --optimize-autoloader --prefer-dist --no-interaction --no-progress --no-suggest
      - name: "Define release name"
        run: |
          REF_NAME=$(echo ${{ matrix.branch }} | sed -E 's|/|-|')
          SHA=$(git rev-parse --short HEAD)
          echo "::set-env name=release_name::$REF_NAME.$SHA"
      - name: "Build"
        run: |
          echo "Y" | docker exec --interactive ${{ job.services.app.id }} tools/make_release.sh . ${{ env.release_name }}
          docker cp ${{ job.services.app.id }}:/tmp/glpi-${{ env.release_name }}.tgz ${{ github.workspace }}/${{ env.release_name }}.tar.gz
      - name: "Store archive"
        uses: actions/upload-artifact@v2
        with:
            name: ${{ env.release_name }}.tar.gz
            path: ${{ github.workspace }}/${{ env.release_name }}.tar.gz
